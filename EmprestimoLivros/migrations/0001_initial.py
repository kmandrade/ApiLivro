# Generated by Django 5.1.4 on 2025-01-14 23:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Livro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('nome', models.CharField(max_length=70, verbose_name='Nome do Livro')),
                ('autor', models.CharField(max_length=100, verbose_name='Autor')),
                ('resumo', models.CharField(max_length=100, verbose_name='Resumo')),
                ('isbn', models.CharField(max_length=13, unique=True, verbose_name='ISBN')),
                ('disponivel', models.BooleanField(default=True, verbose_name='Disponível')),
            ],
            options={
                'verbose_name': 'Livro',
                'verbose_name_plural': 'Livros',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('employee_id', models.CharField(max_length=20, unique=True, verbose_name='ID do Funcionário')),
                ('department', models.CharField(max_length=50, verbose_name='Departamento')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RegistroEmprestimo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('solicitante', models.CharField(max_length=100, verbose_name='Nome do Solicitante')),
                ('data_emprestimo', models.DateField(auto_now_add=True, verbose_name='Data do Empréstimo')),
                ('data_devolucao', models.DateField(blank=True, null=True, verbose_name='Data de Devolução')),
                ('devolvido', models.BooleanField(default=False, verbose_name='Devolvido')),
                ('livro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emprestimos', to='EmprestimoLivros.livro', verbose_name='Livro')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emprestimos_gerenciados', to=settings.AUTH_USER_MODEL, verbose_name='Funcionário')),
            ],
            options={
                'verbose_name': 'Registro de Empréstimo',
                'verbose_name_plural': 'Registros de Empréstimos',
                'ordering': ['-data_emprestimo'],
            },
        ),
    ]
